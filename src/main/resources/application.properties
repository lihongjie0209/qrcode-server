# QR码检测服务配置
quarkus.application.name=qrcode-server

# HTTP端口配置
quarkus.http.port=8080

# 文件上传配置
quarkus.http.limits.max-body-size=50M
quarkus.http.body.multipart.max-file-size=50M

# 日志配置
quarkus.log.level=INFO
quarkus.log.category."cn.lihongjie".level=DEBUG

# CORS配置（用于前端开发）
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.headers=*
quarkus.http.cors.methods=*

# 静态资源配置
quarkus.http.static-resources."/"=META-INF/resources

# Micrometer配置
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics/prometheus

# 开启HTTP请求指标
quarkus.micrometer.binder.http-server.enabled=true
quarkus.micrometer.binder.http-client.enabled=true

# 开启JVM指标
quarkus.micrometer.binder.jvm=true

# GraalVM原生镜像配置
# 启用反射配置
quarkus.native.enable-all-security-services=true
quarkus.native.add-all-charsets=true
quarkus.native.enable-all-timezones=true

# BoofCV相关配置
quarkus.native.additional-build-args=--allow-incomplete-classpath,\
    --report-unsupported-elements-at-runtime,\
    --initialize-at-run-time=org.ejml,\
    --initialize-at-run-time=boofcv,\
    --initialize-at-build-time=,\
    -H:+ReportExceptionStackTraces,\
    -H:+PrintClassInitialization,\
    -H:ReflectionConfigurationFiles=META-INF/native-image/reflect-config.json,\
    -H:ResourceConfigurationFiles=META-INF/native-image/resource-config.json